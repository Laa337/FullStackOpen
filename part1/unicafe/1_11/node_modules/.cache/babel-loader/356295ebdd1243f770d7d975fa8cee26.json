{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\full_stack_open\\\\FullStackOpen\\\\part1\\\\unicafe\\\\1_8\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistic = ({\n  all,\n  av,\n  positive\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }\n  }, \"Statistic\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }\n  }, \"All: \", all, \"         \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }\n  }, \"Average:  \", av, \"  \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }\n  }, \"Positive: \", positive, \" \"));\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [stats, setStat] = useState({\n    'all': 0,\n    'av': 0,\n    'positive': 0\n  });\n\n  const calcStat = (good, neutral, bad) => {\n    let all = good + neutral + bad;\n    let av = (good - bad) / (good + bad + neutral);\n    let pos = good / (good + bad + neutral);\n    console.log('good', good);\n    return {\n      'all': all,\n      'av': av,\n      'positive': positive\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setGood(good + 1);\n      setStat(calcStat(good + 1, neutral, bad));\n      console.log('Stats: ', stats);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setNeutral(neutral + 1);\n      setStat(calcStat(good, neutral + 1, bad));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 2\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setBad(bad + 1);\n      setStat(calcStat(good, neutral, bad + 1));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 2\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Statistic:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statistic\",\n    id: \"statistic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"Good:    \", good, \"    \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Neutral: \", neutral, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"Bad:     \", bad, \"     \"), /*#__PURE__*/React.createElement(Statistic, {\n    all: stats.all,\n    av: stats.av,\n    positive: stats.positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  })));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Git/full_stack_open/FullStackOpen/part1/unicafe/1_8/src/index.js"],"names":["React","useState","ReactDOM","Statistic","all","av","positive","App","good","setGood","neutral","setNeutral","bad","setBad","stats","setStat","calcStat","pos","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistic = ({all,av,positive}) => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Statistic</h2>\n\t\t\t<p>All: {all}\t        </p>\n\t\t\t<p>Average:  {av} \t</p>\n\t\t\t<p>Positive: {positive} </p>\n\t\t</div>\n\t)\n\n}\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [stats, setStat] = useState({'all':0, 'av':0, 'positive':0})\n\n  \n\n  \n\n  const calcStat = (good,neutral,bad) => {\n\t\t\t    let\tall = good+neutral+bad\n\t\t\t    let\tav =  (good-bad)/(good+bad+neutral)\n\t\t\t    let pos = good /(good+bad+neutral)\n\t\t\t    console.log('good',good)\n\t\t\t\treturn { 'all':all, 'av':av, 'positive':positive}\n  \t\t}\n\n  return (\n    <div>\n      <h2>Give Feedback</h2>\n        <button onClick={()=> { setGood(good + 1); setStat(calcStat(good+1,neutral,bad)); console.log('Stats: ',stats)  } }>Good</button>\n\t<button onClick={()=> { setNeutral(neutral +1); setStat(calcStat(good,neutral+1,bad)) } }>Neutral</button>\n\t<button onClick={()=> { setBad(bad +1); setStat(calcStat(good,neutral,bad+1))      } }>Bad</button>\n\n        <br/><br/>\n        <h3>Statistic:</h3>\n        <div className=\"statistic\" id=\"statistic\" >\n\t   <p>Good:    {good}    </p>\n\t   <p>Neutral: {neutral} </p>\n\t   <p>Bad:     {bad}     </p>\n \t   <Statistic all={stats.all} av={stats.av} positive={stats.positive} />\n        </div>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}