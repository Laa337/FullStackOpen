{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\full_stack_open\\\\FullStackOpen\\\\part1\\\\anecdotes\\\\1_14\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Popular = votes => {\n  let sum = votes.reduce((a, b) => a + b, 0);\n  console.log('Sum: ', sum);\n\n  if (sum > 0) {\n    let max = Math.max(...votes);\n    console.log('Max: ', max);\n    polpular = 0;\n\n    for (let i = 0; i < votes.length; i++) {\n      if (votes[i] == max) {\n        popular = i;\n        break;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, \"The most popular anecdote is\"), /*#__PURE__*/React.createElement(\"spawn\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 53\n      }\n    }, votes[popular]));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n};\n\nconst Button = ({\n  text,\n  handleClick\n}) => {\n  console.log('Text', text);\n  console.log('HandleClick', handleClick);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, text);\n};\n\nconst App = props => {\n  const [selected, setSelected] = useState(0);\n  const [votes, setVotes] = useState(Array.from(Array(10), (_, x) => 0));\n\n  const selectAnAnecdote = () => {\n    let newSelect = Math.floor(Math.random() * anecdotes.length);\n\n    while (newSelect === selected) {\n      newSelect = Math.floor(Math.random() * anecdotes.length);\n    }\n\n    setSelected(newSelect);\n  };\n\n  console.log('Selected:  ', selected);\n  console.log('votes', votes);\n\n  const vote = () => {\n    const copy = [...votes];\n    copy[selected] += 1;\n    setVotes(copy);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, props.anecdotes[selected], /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 2\n    }\n  }), \"has\", votes[selected], \" votes\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Vote!\",\n    handleClick: vote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Give another!\",\n    handleClick: selectAnAnecdote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst anecdotes = ['If it hurts, do it more often', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'];\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  anecdotes: anecdotes,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Git/full_stack_open/FullStackOpen/part1/anecdotes/1_14/src/index.js"],"names":["React","useState","ReactDOM","Popular","votes","sum","reduce","a","b","console","log","max","Math","polpular","i","length","popular","Button","text","handleClick","App","props","selected","setSelected","setVotes","Array","from","_","x","selectAnAnecdote","newSelect","floor","random","anecdotes","vote","copy","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Popular = (votes) => {\n\tlet sum = votes.reduce((a, b) => a + b, 0)\n\tconsole.log('Sum: ', sum)\n\tif(sum>0) {\n\t\tlet max = Math.max( ...votes )  \n\t\tconsole.log('Max: ',max)\n\t        polpular =0\n\t\tfor(let i=0;i<votes.length;i++) {\n\t\t\tif(votes[i]==max){\n\t\t\t\t popular = i\n\t\t\t\t break\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (<div><h3>The most popular anecdote is</h3><spawn>{votes[popular]}</spawn></div>)\n\t}\n\telse {return (<></>)}\n}\n\nconst Button = ({text,handleClick}) => {\n\tconsole.log('Text', text)\n\tconsole.log('HandleClick', handleClick)\n\treturn <button onClick = { handleClick }>{text}</button>\n}\n\nconst App = (props) => {\n  const [selected, setSelected] = useState(0)\n  const [votes, setVotes] = useState( Array.from(Array(10), (_,x) => 0)  )\n\n\n  const selectAnAnecdote = () => {\n\tlet newSelect = Math.floor(Math.random() * anecdotes.length);\n\twhile(newSelect===selected) {\n\t\tnewSelect = Math.floor(Math.random() * anecdotes.length);\n\t}\n\t\tsetSelected(newSelect)\t\t\t\t\t\n  }\n\tconsole.log('Selected:  ', selected)\n\tconsole.log('votes',votes)\n\n  const vote = () => { \n\tconst copy = [...votes]\n\tcopy[selected]\t+=1\n\tsetVotes(copy)\n }\n  return (\n    <div>\n      {props.anecdotes[selected]}\n\t<br />\n\t\thas{votes[selected] } votes\n\t<br />\n      <Button text='Vote!' handleClick={vote } />\n      <Button text='Give another!' handleClick={selectAnAnecdote } />\n    </div>\n  )\n}\n\nconst anecdotes = [\n  'If it hurts, do it more often',\n  'Adding manpower to a late software project makes it later!',\n  'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n  'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n  'Premature optimization is the root of all evil.',\n  'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n]\n\nReactDOM.render(\n  <App anecdotes={anecdotes} />,\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}