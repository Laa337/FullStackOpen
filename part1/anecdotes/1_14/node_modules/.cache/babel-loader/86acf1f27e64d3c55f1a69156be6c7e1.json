{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\full_stack_open\\\\FullStackOpen\\\\part1\\\\unicafe\\\\1_10\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistic = ({\n  name,\n  value\n}) => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 37\n  }\n}, name, \" : \", value, \" \");\n\nconst Statistics = ([good, neutral, bad, all, av, positive]) => {\n  if (all > 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }\n    }, \"Statistic\"), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"good\",\n      value: good,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"neutral\",\n      value: neutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"bad\",\n      value: bad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }, \"No statistic to show\"));\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [stats, setStat] = useState({\n    'all': 0,\n    'av': 0,\n    'positive': 0\n  });\n\n  const calcStat = (good, neutral, bad) => {\n    let all = good + neutral + bad;\n    let av = (good - bad) / (good + bad + neutral);\n    let positive = good / (good + bad + neutral);\n    console.log('good', good);\n    return {\n      'all': all,\n      'av': av,\n      'positive': positive\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setGood(good + 1);\n      setStat(calcStat(good + 1, neutral, bad));\n      console.log('Stats: ', stats);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setNeutral(neutral + 1);\n      setStat(calcStat(good, neutral + 1, bad));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 2\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setBad(bad + 1);\n      setStat(calcStat(good, neutral, bad + 1));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 2\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    stats: [good, neutral, bad, stats.all],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Git/full_stack_open/FullStackOpen/part1/unicafe/1_10/src/index.js"],"names":["React","useState","ReactDOM","Statistic","name","value","Statistics","good","neutral","bad","all","av","positive","App","setGood","setNeutral","setBad","stats","setStat","calcStat","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistic = ({name,value}) => <p>{name} : {value} </p>\n\nconst Statistics = ( [good,neutral,bad,all,av,positive] ) => {\t\n\t\tif (all>0) {  \n\t\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Statistic</h2>\n\t\t  \t   <Statistic text=\"good\" value ={good} />\n     \t\t   \t   <Statistic text=\"neutral\" value ={neutral} />\n     \t\t    \t   <Statistic text=\"bad\" value ={bad} />\n\t\t\t</div> \n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t<div>\n\t\t\t<h3>No statistic to show</h3>\n\t\t</div>\n\t\t)\n}\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [stats, setStat] = useState({'all':0, 'av':0, 'positive':0})\n\n  \n\n  \n\n  const calcStat = (good,neutral,bad) => {\n\t\t\t    let\tall = good+neutral+bad\n\t\t\t    let\tav =  (good-bad)/(good+bad+neutral)\n\t\t\t    let positive = good /(good+bad+neutral)\n\t\t\t    console.log('good',good)\n\t\t\t\treturn { 'all':all, 'av':av, 'positive':positive}\n  \t\t}\n\n  return (\n    <div>\n      <h2>Give Feedback</h2>\n        <button onClick={()=> { setGood(good + 1); setStat(calcStat(good+1,neutral,bad)); console.log('Stats: ',stats)  } }>Good</button>\n\t<button onClick={()=> { setNeutral(neutral +1); setStat(calcStat(good,neutral+1,bad)) } }>Neutral</button>\n\t<button onClick={()=> { setBad(bad +1); setStat(calcStat(good,neutral,bad+1))      } }>Bad</button>\n\n        <br/><br/>\n        <Statistic stats = {[good,neutral,bad,stats.all]} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}