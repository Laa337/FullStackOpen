{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\full_stack_open\\\\FullStackOpen\\\\part1\\\\courseinfo\\\\1_5\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, props.course));\n};\n\nconst Part = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }, \" \", props.part, \" : \", props.exercises, \"  \"));\n};\n\nconst Content = props => {\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Part, {\n    part: props.exercise[0],\n    exercises: props.exercise[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Part, {\n    part: props.exercise[2],\n    exercises: props.exercise[3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Part, {\n    part: props.exercise[4],\n    exercises: props.exercise[5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst Total = props => {\n  return /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, \"Number of exercises:  \", props.sum, \" \"));\n};\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    course: course.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    exercises: propsToArray(course.parts),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Total, {\n    sum: course[0].exercises + course[1].exercises + course[2].exercises,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst propsToArray = p => {\n  let t = [];\n\n  for (let i = 0; i < p.length; i++) {\n    t = t.concat(Object.keys(p[i]).map(j => p[i][j]));\n  }\n\n  return t;\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Git/full_stack_open/FullStackOpen/part1/courseinfo/1_5/src/index.js"],"names":["React","ReactDOM","Header","props","course","Part","part","exercises","Content","exercise","Total","sum","App","name","parts","propsToArray","p","t","i","length","concat","Object","keys","map","j","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\n\nconst Header = (props) => {\n\treturn (\n\t    <header>\n      \t\t<h1>{props.course}</h1>\n    \t    </header>\n\t)\n}\n\nconst Part = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<p> {props.part} : {props.exercises }  </p>\n\t\t</>\n\t)\n}\n\nconst Content = (props) => {\n\treturn (\n\t\t<main>\n\t\t\t<Part part={props.exercise[0]} exercises={props.exercise[1] } />\n\t\t\t<Part part={props.exercise[2]} exercises={props.exercise[3] } />\n\t\t\t<Part part={props.exercise[4]} exercises={props.exercise[5] } />\n\t\t</main>\n\t)\t\n\t\n}\n\nconst Total = (props) => {\n\treturn (\n\t\t<footer>\n\t\t\t<p>Number of exercises:  {props.sum} </p>\n\t\t</footer>\n\t)\n}\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n  return (\n    <>\n      <Header course={course.name} />\n      <Content exercises = {propsToArray(course.parts)} />\n      <Total sum= {course[0].exercises + course[1].exercises + course[2].exercises} />\n    \n      \n    </>\n  )\n}\n\nconst propsToArray = (p) => {\n   let t = []\n   for (let i = 0; i < p.length; i++) {\n\t t = t.concat(Object.keys(p[i]).map(j => p[i][j]))\n\t \n   }\nreturn t;\n} \n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}